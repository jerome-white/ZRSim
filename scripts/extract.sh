#!/bin/bash

#
# defaults
#
workers=20
min_ngram=4
memory=480
duration=6:00:00

while getopts "n:m:s:w:r:d:t:c:h" OPTION; do
    case $OPTION in
	n) min_ngram=$OPTARG ;;
	m) max_ngram=$OPTARG ;;
	s) starting_ngram=$OPTARG ;;
	w) workers=$OPTARG ;;
	r) memory=$OPTARG ;;
	t) duration=$OPTARG ;;
	c) corpus=$OPTARG ;;
	d) root=$OPTARG ;;
        h)
	    cat <<EOF
A convenience script for running the n-gram extractor within a
SLURM-based cluster.

Usage: $0 [options]

  -n Minimum n-gram length (default $min_ngram).

  -m Maximum n-gram length.

  -s The n-gram length at which extraction itself should start. While
     the minimum n-gram length is the smallest n-gram that will be
     generated by the simulator, the starting n-gram length is the
     smallest maximum n-gram length that will be specified. It is
     convenient when requiring the simulator "pick up where it left
     off" in cases of interrupted generation. If this value is left
     unspecified, the specified minimum n-gram length is used.

  -w Number of CPU cores to make available to the JVM.

  -r Amount of memory to make available to the JVM.

  -t Amount of time the JVM is allowed to run.

  -d Directory to which the output should go.

  -c Directory containing corpus (both documents and queries)

Options -r and -t should be specified in a format that SLURM can
understand. See the sbatch manpage for details.
EOF
            exit
            ;;
        *) exit 1 ;;
    esac
done

source `dirname $BASH_SOURCE`/library.sh || exit 1
mload

if [ ! $starting_ngram ]; then
    starting_ngram=$min_ngram
fi

mkdir --parents $root/trees

for i in `seq $starting_ngram $max_ngram`; do
    output=$root/trees/`printf "%02.f" $i`.csv
    if [ -e $output ]; then
	continue
    fi
    echo -n "$i "
    job=`mktemp`

    # if [ $i -lt 9 ]; then
    # 	memory=500
    # 	workers=20
    # elif [ $i -lt 15 ]; then
    # 	memory=750
    # 	workers=24
    # else
    # 	memory=1500
    # 	workers=24
    # fi

    cat <<EOF > $job
#!/bin/bash

java `jargs $memory $workers` exec.NgramExtractor \
    $corpus $min_ngram $i $output $workers $BEEGFS

chmod 444 $output
EOF

    sbatch \
	--mem=${memory}G \
	--time=$duration \
	--nodes=1 \
	--cpus-per-task=$workers \
	--workdir=`pwd` \
	--job-name=zrsim-$i \
	$job
done
